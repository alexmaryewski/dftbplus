# This is the CMakeCache file.
# For build in directory: /home/maryewski/Projects/dftbplus
# It was generated by CMake: /usr/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Whether the libraries built should be shared
BUILD_SHARED_LIBS:BOOL=ON

//No help, variable specified on the command line.
CMAKE_BUILD_TYPE:UNINITIALIZED=RelWithDebugInfo

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=/home/maryewski/Projects/dftbplus/CMakeFiles/pkgRedirects

//Directory to install the compiled code into
CMAKE_INSTALL_PREFIX:STRING=/home/maryewski/Projects/dftbplus/_install

//Whether the library should be dynamically loadable
ENABLE_DYNAMIC_LOADING:BOOL=ON

//Directory under which to collect all populated content
FETCHCONTENT_BASE_DIR:PATH=/home/maryewski/Projects/dftbplus/_deps

//Disables all attempts to download or update content and assumes
// source dirs already exist
FETCHCONTENT_FULLY_DISCONNECTED:BOOL=OFF

//Enables QUIET option for all content population
FETCHCONTENT_QUIET:BOOL=ON

//Enables UPDATE_DISCONNECTED behavior for all content population
FETCHCONTENT_UPDATES_DISCONNECTED:BOOL=OFF

//Configuration methods to try in order to satisfy hybrid dependencies
HYBRID_CONFIG_METHODS:STRING=Submodule;Find;Fetch

//Name of the project specific sub-folder within the install folder
// for include files
INSTALL_INCLUDEDIR:PATH=dftbplus

//Installation directory for Fortran module files (within the install
// folder for include files)
INSTALL_MODULEDIR:PATH=dftbplus/modfiles

//Whether build should support concurrent DFTB+ instances
INSTANCE_SAFE_BUILD:BOOL=OFF

//Whether coverage report should be generated via lcov/genhtml
LCOV_REPORT:BOOL=OFF

//How to run the modes code for tests
MODES_RUNNER_TEMPLATE:STRING=env OMP_NUM_THREADS=${TEST_OMP_THREADS}

//Compiler and Linker language to assume when creating the pkg-config
// export file (C or Fortran)
PKGCONFIG_LANGUAGE:STRING=Fortran

//Nr. of MPI processes used for testing
TEST_MPI_PROCS:STRING=1

//Nr. of OpenMP-threads used for testing
TEST_OMP_THREADS:STRING=1

//How to run the tests
TEST_RUNNER_TEMPLATE:STRING=env OMP_NUM_THREADS=${TEST_OMP_THREADS}

//Whether valgrind should be invoked when testing binaries
TEST_WITH_VALGRIND:BOOL=OFF

//Whether public API should be included and the DFTB+ library installed
WITH_API:BOOL=ON

//Whether the ARPACK library should be included (needed for TD-DFTB)
WITH_ARPACK:BOOL=OFF

//Whether repulsive corrections via the ChIMES library should be
// enabled
WITH_CHIMES:BOOL=ON

//Whether DFTB+ with MPI-parallelism should use the ELSI libraries
WITH_ELSI:BOOL=OFF

//Whether DFTB+ should support GPU-acceleration
WITH_GPU:BOOL=OFF

//Whether DFTB+ should be built with many-body-dispersion support
WITH_MBD:BOOL=ON

//Whether DFTB+ should support MPI-parallelism
WITH_MPI:BOOL=OFF

//Whether OpenMP thread parallisation should be enabled
WITH_OMP:BOOL=ON

//Whether DFTB+ should be built with polarizable QM/MM support
// through openmmpol
WITH_OPENMMPOL:BOOL=ON

//Whether metadynamics via the PLUMED2 library should be allowed
// for
WITH_PLUMED:BOOL=OFF

//Whether the Poisson-solver should be included
WITH_POISSON:BOOL=OFF

//Whether the Python components of DFTB+ should be tested and installed
WITH_PYTHON:BOOL=ON

//Whether the s-dftd3 library should be included
WITH_SDFTD3:BOOL=ON

//Whether socket communication should be allowed for
WITH_SOCKETS:BOOL=OFF

//Whether xTB support should be included via tblite.
WITH_TBLITE:BOOL=ON

//Whether transport via libNEGF should be included.
WITH_TRANSPORT:BOOL=OFF

//Whether the unit tests should be built
WITH_UNIT_TESTS:BOOL=OFF

//No help, variable specified on the command line.
openmmpol_DIR:UNINITIALIZED=/home/maryewski/opt/openmmpol/lib/cmake/openmmpol


########################
# INTERNAL cache entries
########################

//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/home/maryewski/Projects/dftbplus
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=31
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/usr/bin/ccmake
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/home/maryewski/Projects/dftbplus
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/share/cmake

